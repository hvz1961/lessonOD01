# Алгоритм проверки строки на палиндром
# Принять строку на вход
# Получить строку, которую нужно проверить.
# Привести строку к единому формату
# Преобразовать все буквы в нижний регистр (чтобы не учитывать разницу между заглавными и строчными буквами).
# Удалить пробелы, знаки пунктуации и другие неалфавитные символы (если необходимо учитывать только буквы и цифры).
# Сравнить строку с её перевёрнутым вариантом
# Развернуть строку (например, используя срез [::-1]).
# Проверить, совпадает ли исходная строка с перевёрнутой.
# Вернуть результат
# Если строки совпадают — вернуть True (это палиндром).
# Если строки различаются — вернуть False (это не палиндром).

import re

def is_palindrome(s: str) -> bool:
    """
    Проверяет, является ли строка палиндромом.

    :param s: Входная строка.
    :return: True, если строка палиндром, иначе False.
    """
    # Приводим к нижнему регистру и удаляем все небуквенно-цифровые символы
    cleaned_s = re.sub(r'[^a-zA-Z0-9]', '', s.lower())
    # Сравниваем с перевернутым вариантом
    return cleaned_s == cleaned_s[::-1]


# Примеры использования
print(is_palindrome("А роза упала на лапу Азора"))  # True
print(is_palindrome("12321"))  # True
print(is_palindrome("Hello, world!"))  # False
